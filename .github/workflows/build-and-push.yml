# .github/workflows/build-and-push.yml
name: Build and Push Docker Image to GCR

on:
  push:
    branches:
      - main # main branch'ine yapılan push'larda tetiklenir
  workflow_dispatch: # Manuel olarak da tetiklenebilir

env:
  PROJECT_ID: medical-image-annotator
  SERVICE_NAME: auth-service 
  REGION: europe-west3 

jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Authenticate to GCP
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}' 
    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Configure Docker to use gcloud as a credential helper
      run: gcloud auth configure-docker --quiet

    - name: Build and push Docker image to Google Container Registry
      run: |
        # Dockerfile'ınızın Go uygulamanızın ana paketini doğru bir şekilde işaret ettiğinden emin olun.
        # Örneğin: RUN CGO_ENABLED=0 go build -ldflags="-s -w" -o auth-service ./cmd/auth-service/main.go
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA . # GITHUB_SHA ile benzersiz bir etiketleme
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA

    - name: Store image tag for later deployment
      # Bir sonraki manuel dağıtım adımında kullanılmak üzere imaj etiketini bir artefakt olarak kaydederiz.
      # Veya doğrudan Cloud Run'a manuel dağıtım komutunda GITHUB_SHA kullanabiliriz.
      run: echo "IMAGE_TAG=gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA" >> $GITHUB_ENV