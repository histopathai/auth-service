name: Deploy Go Auth Service to Cloud Run

on:
  push:
    branches:
      - main # main branch'ine yapılan push'larda çalışacak

env:
  PROJECT_ID: auth-service-test-464208 # Kendi GCP proje ID'nizi buraya yazın
  REGION: europe-west3 # Cloud Run bölgesini ihtiyacınıza göre değiştirin
  SERVICE_NAME: auth-service # Cloud Run servis adını belirleyin
  ARTIFACT_REGISTRY_REPO: auth-service-repo # Artifact Registry repo adını belirleyin

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate with Google Cloud
        id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Configure Docker to use Google Cloud Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push Docker Image to Artifact Registry
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \ 
            --set-env-vars=SERVER_PORT=8080,READ_TIMEOUT=15,WRITE_TIMEOUT=15,IDLE_TIMEOUT=60,GIN_MODE=release \
            --set-env-vars=FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }},FIRESTORE_USERS_COLLECTION=${{ secrets.FIRESTORE_USERS_COLLECTION }} \
            --set-env-vars=SMTP_HOST=${{ secrets.SMTP_HOST }},SMTP_PORT=${{ secrets.SMTP_PORT }},SMTP_USERNAME=${{ secrets.SMTP_USERNAME }},SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }},SMTP_SENDER_EMAIL=${{ secrets.SMTP_SENDER_EMAIL }}
